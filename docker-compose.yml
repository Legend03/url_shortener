services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - .env

  postgres:
    container_name: url_shortener
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - .postgres:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pundalov03@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pundalov03
    ports:
      - "5050:80"
    depends_on:
      - postgres